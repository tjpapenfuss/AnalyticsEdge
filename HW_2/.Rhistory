stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(boston.train, aes(x=dis)) +
geom_line(aes(y = boston.train_1$nox))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
lines(sort(boston.train_0$dis),
fitted(regressor_splines_0)[order(boston.train_0$dis)],
col = "red",
typle = 1)
lines(sort(boston.train_0$dis),
fitted(regressor_splines_0)[order(boston.train_0$dis)],
col = "red",
type = 1)
lines(sort(boston.train_0$dis),
fitted(regressor_splines_0)[order(boston.train_0$dis)],
col = "red")
plot(boston.train$nox,boston.train$dis)
lines(sort(boston.train_0$dis),
fitted(regressor_splines_0)[order(boston.train_0$dis)],
col = "red")
lines(sort(boston.train_1$dis),
fitted(regressor_splines_1)[order(boston.train_1$dis)],
col = "red")
lines(sort(boston.train_1$dis),
fitted(regressor_splines_1)[order(boston.train_1$dis)],
col = "blue")
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
grid %>% add_predictions(regressor_splines_0)
y_vaules =
grid <- data.frame(x_values)
x_values = c(2,2.5,3,3.5,4,4.5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12)
grid <- data.frame(x_values)
grid %>% add_predictions(regressor_splines_0)
library(predictions)
newdat = data.frame(x_values)
model.predictions = map_df(models, ~cbind(newdat, Petal.Width=predict(.x, newdat)),
.id="Species")
newdat %>% data.frame(predict(regressor_splines_0,x_values))
y_data = data.frame(predict(regressor_splines_0,x_values))
predict(regressor_splines_0,data=x_values)
predict(regressor_splines_0,data=x_values)
models = boston.train %>%
split(boston.train$nonretail) %>%
map(~lm(formula = nox ~ poly(dis,df=3), data = boston.train))
models
newdat = data.frame(x_values)
model.predictions = map_df(models, ~cbind(newdat, Petal.Width=predict(.x, newdat)),
.id="Species")
boston.train_1 = subset(boston.train, boston.train$nonretail == 1)
regressor_splines_1 = lm(formula = nox ~ poly(dis,df=3), data = boston.train_1)
ggplot(data=boston.train_1,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox)) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox), se=FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
# plot a scatter plot
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE) +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE, color = "red") +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE,
color = "red", label = "old Poly curve") +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE,
color = "red") +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
source("~/AnalyticsEdge/AnalyticsEdge/HW_2/Papenfuss_HW2.R")
#First plot the old regressor, then plot the two new regressors.
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE,
color = "red") +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ poly(dis,df=3)*factor(nonretail), data = boston.train)
summary(regressor_splines)
#Obtain the R^2 value of the test data set.
SSR_of_model <- sum((regressor_splines-boston.test$nox)^2)
#Run the prediction on the test data set
prediction_Test_Set_spline = predict(regressor_splines, newdata = boston.test)
#Obtain the R^2 value of the test data set.
SSR_of_model <- sum((prediction_Test_Set_spline-boston.test$nox)^2)
SSR_of_baseline <- sum((mean(boston.train$nox)-boston.test$nox)^2)
OSR2 <- 1-(SSR_of_model/SSR_of_baseline )
OSR2
knots <- quantile(boston.train$dis, p = c(0.2, 0.4, 0.6, 0.8))
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ poly(dis,df=3)*factor(nonretail) +
+ ns(knots, 5), data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ poly(dis,df=3)*factor(nonretail) +
+ ns(knots, 4), data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ ns(dis,df=3)*factor(nonretail) +
+ ns(knots, 5), data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ ns(knots,df=5)*factor(nonretail),
data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ ns(dis,knots)*factor(nonretail),
data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ ns(dis,knots=c(0.2, 0.4, 0.6, 0.8))*factor(nonretail),
data = boston.train)
summary(regressor_splines)
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ ns(x,knots=c(0.2, 0.4, 0.6, 0.8)),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ bs(dis,knots=c(0.2, 0.4, 0.6, 0.8))*factor(nonretail),
data = boston.train)
summary(regressor_splines)
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(0.2, 0.4, 0.6, 0.8)),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ bs(knots)*factor(nonretail),
data = boston.train)
knots <- quantile(boston.train$dis, p = c(0.2, 0.4, 0.6, 0.8))
knots_bos <- quantile(boston.train$dis, p = c(0.2, 0.4, 0.6, 0.8))
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ bs(knots_box)*factor(nonretail),
data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ bs(knots_bos)*factor(nonretail),
data = boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ bs(dis,knots=c(0.2, 0.4, 0.6, 0.8))*factor(nonretail),
data = boston.train)
summary(regressor_splines)
regressor_splines_2 = lm(formula = nox ~ bs(dis,knots=c(0.2, 0.4, 0.6, 0.8))*factor(nonretail),
data = boston.train)
summary(regressor_splines_2)
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(0.2, 0.4, 0.6, 0.8)),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
#Run the prediction on the test data set
prediction_Test_Set_spline_2 = predict(regressor_splines_2, newdata = boston.test)
#Obtain the R^2 value of the test data set.
SSR_of_model <- sum((prediction_Test_Set_spline_2-boston.test$nox)^2)
SSR_of_baseline <- sum((mean(boston.train$nox)-boston.test$nox)^2)
OSR2 <- 1-(SSR_of_model/SSR_of_baseline )
OSR2
regressor_splines_2 = lm(formula = nox ~ bs(dis,knots=c(0.2, 0.4, 0.6))*factor(nonretail),
data = boston.train)
summary(regressor_splines_2)
knots_bos <- quantile(boston.train$dis, p = c(0.2, 0.4, 0.6, 0.8))
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ bs(dis,knots=c(2.5, 5.0, 7.5, 10.0))*factor(nonretail),
data = boston.train)
summary(regressor_splines)
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(0.2, 0.4, 0.6, 0.8)),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(2.5, 5.0, 7.5, 10.0)),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
knots_bos
knots_bos[1]
regressor_splines_2 = lm(formula = nox ~ bs(dis,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4]))*factor(nonretail),
data = boston.train)
summary(regressor_splines_2)
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(0.2, 0.4, 0.6, 0.8)),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
#Run the prediction on the test data set
prediction_Test_Set_spline_2 = predict(regressor_splines_2, newdata = boston.test)
#Obtain the R^2 value of the test data set.
SSR_of_model <- sum((prediction_Test_Set_spline_2-boston.test$nox)^2)
SSR_of_baseline <- sum((mean(boston.train$nox)-boston.test$nox)^2)
OSR2 <- 1-(SSR_of_model/SSR_of_baseline )
OSR2
ggplot(data=boston.train,aes(x=dis, y=nox)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])),se = FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Spline graph") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
#Create two new regressors. These are for nonretail =0 & 1. These regressors will be used
#below in the ggplot
regressor_splines_1 = lm(formula = nox ~ bs(dis,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4]))*factor(nonretail),
data = boston.train_1)
#Create two new regressors. These are for nonretail =0 & 1. These regressors will be used
#below in the ggplot
regressor_splines_1 = lm(formula = nox ~ bs(dis,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])),
data = boston.train_1)
regressor_splines_0 = lm(formula = nox ~ bs(dis,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])),
data = boston.train_0)
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE,
color = "red") +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ poly(x, degree=3), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(dis,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(dis,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
source("~/AnalyticsEdge/AnalyticsEdge/HW_2/Papenfuss_HW2.R")
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
geom_smooth(data = boston.train_0,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE) +
geom_smooth(data = boston.train_1,aes(x=dis, y=nox),
method = "lm", formula = y ~ bs(x,knots=c(knots_bos[1],
knots_bos[2], knots_bos[3], knots_bos[4])), se=FALSE, color = "blue") +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Spline graph Question 1 part d") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
