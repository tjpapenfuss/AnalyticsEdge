library(tidyverse)
library(ggrepel)
library(caTools)
library(caret)
library(ROCR)
library(ggplot2)
library(splines)
library(ISLR)
library(caret)
library(leaps)
library(gridExtra)
library(dplyr)
library(tidyr)
library(lars)
library(gbm)
library(glmnet)
library(ggcorrplot)
library(Hmisc)
library(caTools)
data = read.csv("framingham.csv")
setwd("~/AnalyticsEdge/AnalyticsEdge/HW_3")
library(caTools)
data = read.csv("framingham.csv")
# Set CHD as a factor variable. This is the dependent variable (y).
data$TenYearCHD <- factor(data$TenYearCHD)
# Set your additional factor variables.
data$male <- factor(data$male)
data$currentSmoker <- factor(data$currentSmoker)
data$BPMeds <- factor(data$BPMeds)
data$prevalentStroke <- factor(data$prevalentStroke)
data$prevalentHyp <- factor(data$prevalentHyp)
data$diabetes <- factor(data$diabetes)
set.seed(31)
N <- nrow(data)
idx = sample.split(data$TenYearCHD, 0.75)
train <- data[idx,]
test = data[!idx,]
library(caret)
library(InformationValue)
library(ISLR)
model_train <- glm(TenYearCHD ~.,family=binomial, train)
predicted = predict(model_train, newdata = test, type="response")
predicted <- ifelse(predicted>=optimal, 1, 0)
confusionMatrix(test$TenYearCHD, predicted)
summarise(test)
table(test, predicted)
#calculate TPR
sensitivity(test$TenYearCHD, predicted)
#calculate TNR
specificity(test$TenYearCHD, predicted)
model_train <- glm(TenYearCHD ~.,family=binomial, train)
summary(model_train)
predicted = predict(model_train, newdata = test, type="response")
predicted
predicted <- ifelse(predicted>=optimal, 1, 0)
optimal = 0.08
predicted <- ifelse(predicted>=optimal, 1, 0)
predicted
confusionMatrix(test$TenYearCHD, predicted)
library(pROC)
roc_score=roc(test$TenYearCHD, predicted) #AUC score
plot(roc_score ,main ="ROC curve -- Logistic Regression ")
roc_score
optimal = 0.5
predicted <- ifelse(predicted>=optimal, 1, 0)
confusionMatrix(test$TenYearCHD, predicted)
model_train <- glm(TenYearCHD ~.,family=binomial, train)
summary(model_train)
predicted = predict(model_train, newdata = test, type="response")
optimal = 0.5
predicted <- ifelse(predicted>=optimal, 1, 0)
predicted
confusionMatrix(test$TenYearCHD, predicted)
summarise(test)
#calculate TPR
sensitivity(test$TenYearCHD, predicted)
#calculate TNR
specificity(test$TenYearCHD, predicted)
#calculate total misclassification error rate
misClassError(test$TenYearCHD, predicted, threshold=optimal)
roc_score=roc(test$TenYearCHD, predicted) #AUC score
plot(roc_score ,main ="ROC curve -- Logistic Regression ")
roc_score
model_train <- glm(TenYearCHD ~.,family=binomial, train)
summary(model_train)
predicted = predict(model_train, newdata = test, type="response")
optimal = 0.25
predicted <- ifelse(predicted>=optimal, 1, 0)
confusionMatrix(test$TenYearCHD, predicted)
#calculate TPR
sensitivity(test$TenYearCHD, predicted)
#calculate TNR
specificity(test$TenYearCHD, predicted)
#calculate total misclassification error rate
misClassError(test$TenYearCHD, predicted, threshold=optimal)
roc_score=roc(test$TenYearCHD, predicted) #AUC score
plot(roc_score ,main ="ROC curve -- Logistic Regression ")
roc_score
predicted = predict(model_train_three, newdata = test, type="response")
model_train <- glm(TenYearCHD ~.,family=binomial, train)
summary(model_train)
predicted = predict(model_train, newdata = test, type="response")
library(pROC)
roc_score=roc(test$TenYearCHD, predicted) #AUC score
plot(roc_score ,main ="ROC curve -- Logistic Regression ")
roc_score
#calculate TPR
sensitivity(test$TenYearCHD, predicted)
#calculate TNR
specificity(test$TenYearCHD, predicted)
