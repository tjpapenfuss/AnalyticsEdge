setwd("~/AnalyticsEdge/AnalyticsEdge/HW_3")
data = read.csv("titanic.csv")
data$Pclass <- factor(data$Pclass)
data$Sex <- factor(data$Sex)
set.seed(123)
split = createDataPartition(data$Survived, p = 0.7, list = FALSE)
library(tidyverse)
library(ggrepel)
library(caTools)
library(caret)
library(ROCR)
library(ggplot2)
library(splines)
library(ISLR)
library(caret)
library(leaps)
library(gridExtra)
library(dplyr)
library(tidyr)
library(lars)
library(gbm)
library(glmnet)
library(ggcorrplot)
library(Hmisc)
set.seed(123)
split = createDataPartition(data$Survived, p = 0.7, list = FALSE)
titanic.train = titanic[split,]
titanic.train = data[split,]
titanic.test = data[-split,]
head(titanic.test)
str(titanic.train)
# --------------------------------------------------------------------------------- #
#### Problem 1a
# Run the linear regression. Nox is the dependent var. DIS is the independent
regressor = lm(formula = Survived ~ Pclass, Sex, SibSp, data = titanic.train)
summary(regressor)
# --------------------------------------------------------------------------------- #
#### Problem 1a
# Run the linear regression. Survived is the dependent var. Pclass, Sex, and SibSp is the independent
regressor = lm(formula = Survived ~ Pclass + Sex + SibSp, data = titanic.train)
summary(regressor)
# --------------------------------------------------------------------------------- #
#### Problem 1a
# Run the linear regression. Survived is the dependent var. Pclass, Sex, and SibSp is the independent
model <- glm(Survived ~.,family=binomial(link='logit'),data=titanic.train)
summary(model)
# --------------------------------------------------------------------------------- #
#### Problem 1a
# Run the linear regression. Survived is the dependent var. Pclass, Sex, and SibSp is the independent
model <- glm(Survived ~ Pclass + Sex + SibSp,family=binomial(link='logit'),data=titanic.train)
summary(model)
# --------------------------------------------------------------------------------- #
#### Problem 1a
# Run the linear regression. Survived is the dependent var. Pclass, Sex, and SibSp is the independent
model <- glm(Survived ~ Pclass + Sex + SibSp,family=binomial,data=titanic.train)
summary(model)
setwd("~/AnalyticsEdge/AnalyticsEdge/HW_2")
boston = read.csv('boston.csv')
boston$nonretail = as_factor(boston$nonretail)
# Split the data set into training and testing data sets
set.seed(123)
split = createDataPartition(boston$nox, p = 0.7, list = FALSE)
boston.train = boston[split,]
boston.test = boston[-split,]
head(boston.test)
str(boston.train)
## Run regressor with the nonretail factor. This generates really good R^2
regressor_splines = lm(formula = nox ~ poly(dis,df=3)*(nonretail), data = boston.train)
summary(regressor_splines)
#Run the prediction on the test data set
prediction_Test_Set_spline = predict(regressor_splines, newdata = boston.test)
#Obtain the R^2 value of the test data set.
SSR_of_model <- sum((prediction_Test_Set_spline-boston.test$nox)^2)
SSR_of_baseline <- sum((mean(boston.train$nox)-boston.test$nox)^2)
OSR2 <- 1-(SSR_of_model/SSR_of_baseline )
OSR2
#Generate a subset with nonretail = 1
boston.train_1 = subset(boston.train, boston.train$nonretail == 1)
boston.train_1
#Generate a subset with nonretail = 0
boston.train_0 = subset(boston.train, boston.train$nonretail == 0)
boston.train_0
ggplot(data=boston.train,aes(x=dis, y=nox, color=nonretail)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x, degree=3),se = FALSE,
color = "black") +
geom_smooth(method = "lm", formula = y ~ poly(x,df=3), se=FALSE) +
theme_bw() +
xlab('DIS') +
ylab("NOX") +
ggtitle("Polynomial regression of degree 3") +
theme(axis.title=element_text(size=12),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
plot.title = element_text(hjust = 0.5))
